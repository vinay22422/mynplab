import time
def fn():
    print('------------------------------------------')
def fndiji(c,dist,path,visited,source,dest,n):
    for i in range(n):
        visited[i] = 0
        dist[i] = c[source][i]
        path[i] = source
    visited[source] = 1
    for i in range(1,n):
        min=INF
        a=-1
        for j in range( n):
            if visited[j]==0 and dist[j] < min:
                min = dist[j]
                a = j
        if a == -1:
            return
        visited[a] = 1
        if (a == dest):
            return
        for b in range(n):
            if (visited[b] == 0):
                if (dist[a] + c[a][b] < dist[b]):
                    dist[b] = dist[a] + c[a][b]
                    path[b] = a
MAXNODES = 10
INF = 99
#c=cost
c = []
dist=[INF,INF,INF,INF]; path=[-1,-1,-1,-1]; visited=[0,0,0,0]
n = int(input('Enter the number of nodes:   '))
print('Enter the Cost Matrix')
for i in range(n):
    c.append(list(map(int, input().split())))
print('')
for i in range(n):
    for j in range(n):
        if i!=j and c[i][j]!=99:
            print('hello message sent from ', ' ', i, ' to ', j)
            time.sleep(0.1)
            print('echo message sent from:',' ', j, ' to ', i)
for source in range(n):
    print('//For Source Vertex :')
    for destination in range(n):
        fndiji(c,dist,path,visited,source,destination,n)
        if dist[destination] >= INF:
            print(" not reachable")
        else:
            i=destination
            while True:
                print(i,'<--',end='')
                i=path[i]
                if i==source:
                    break
            print(i,'=',dist[destination])
